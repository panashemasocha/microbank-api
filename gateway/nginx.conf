events {}
http {
  upstream client_service {
    server client-service:8080;
  }
  upstream banking_service {
    server banking-service:8080;
  }

  server {
    listen 80;
    # Propagate proper headers to backends (avoid invalid Host like client_service)
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Ensure auth headers and HTTP version are preserved
    proxy_set_header Authorization $http_authorization;
    proxy_http_version 1.1;
    # Route groups
    location /auth/ {
      proxy_pass http://client_service/api/auth/;
    }
    # Support legacy /api/auth/* paths via gateway
    location /api/auth/ {
      proxy_pass http://client_service/api/auth/;
    }
    # Block internal endpoints from external access
    location /api/internal/ {
      return 403;
    }
    # Route banking accounts directly under /api/accounts/* for convenience
    location /api/accounts/ {
      proxy_pass http://banking_service/api/accounts/;
    }
    # Route client-service general API under /api/*
    # Place after the more specific /api/auth/ so it doesn't override it
    location /api/ {
      proxy_pass http://client_service/api/;
    }
    location /clients/ {
      proxy_pass http://client_service/api/;
    }
    location /banking/ {
      proxy_pass http://banking_service/api/;
    }
    # Route banking-service under /api/banking/* for consistency
    location /api/banking/ {
      proxy_pass http://banking_service/api/;
    }
    # Health
    location = /health {
      return 200 "ok";
    }
  }
}
